// all users 
query{
  allUsers{
    name,
    email
  }
}

// all products
query{
  allProducts{
    name,
    description
  }
}

// all reviews 
query{
  allReviews{
    id,
    text
  }
}

// all categories / sub categories and so on 
query{
  allCategories {
    id
    name
  }
  allSubCategories {
    id
    name
    image
  }
  allSubSubCategories {
    id
    name
  }
}

// search products
query {
  products(query: "lisca") {
    name
    description
  }
}

// add users
mutation {
    createUser(data: {
      name: "aaa", 
      email: "aaa@gmail.com", 
      password: "idea123",
      role: "2"
    }){
    id,
    name,
    email,
    password,
    role{
      name
    }
  }
}

// add products 
mutation {
  createProduct(
    data: { name: "Product 101", description: "This is a new product" }
  ) {
    id
    name
    description
  }
}


// add reviews 
mutation {
  createReview(data: { text: "Comment 101", author: "2", product: "1" }) {
    id
    text
    product {
      name
    },
    author{
      name
    }
  }
}


// delete users
mutation{
  deleteUser(id: "2"){
    name,
    articles{
      title
    },
    comments{
      text
    }
  }
}

// delete products
mutation{
  deleteProduct(id: "14"){
    title,
    comments{
      text
    },
    author{
      name
    }
  }
}

// delete comments
mutation{
  deleteReview(id: "101"){
    text,
    id
  }
}

// update user  
mutation {
    updateUser( id: "1", data: {
      name: "Ram", 
      age: 32
    }){
    id,
    name,
    email,
    age
  }
}

// update product 
mutation {
  updateProduct( id: "11", data: {
      title: "Product updated 1", 
      body: "Description updated"
    }){
    id,
    title,
    body
  }
}

// update comments
mutation {
  updateReview( id: "101", data: {
      text: "Comment updated 1"
    }){
    id,
    text
  }
}


// CRUD Operations Subscription 
subscription{
  product{
    mutation
    data{
      title
    }
  }
}


// relational products and users 
{
  products{
    name,
    author{
      name
    }
  },
  users{
    name,
    articles{
      title
    }
  }
}

// relational data between comments, users and products 
{
  allReviews{
    text,
    author{
      name
    }
  },
  users{
    name,
    comments{
      text
    }
  }
}

// nested relational data
{
  products{
    title,
    author {
      name,
      comments{
        text
      }
    },
    comments{
      text,
      author{
        name
      }
    }
  }
}